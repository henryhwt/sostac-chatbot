from sentence_transformers import SentenceTransformer
from pinecone import Pinecone, ServerlessSpec
from openai import OpenAI
import streamlit as st


client = OpenAI(api_key=st.secrets["openai_api_key"])

model = SentenceTransformer('all-MiniLM-L6-v2')


pinecone_client = Pinecone(api_key=st.secrets["pinecone_api_key"])
index = pinecone_client.Index(index_name="sostac-basic", host="https://sostac-basic-6z9ddqf.svc.aped-4627-b74a.pinecone.io")


def find_match(input):
    # input_em = model.encode(input).tolist()
    # result = index.query(input_em, top_k=2, include_metadata=True)
    result =  index.query(vector=[0.86,0.44,0.57,0.42,0.34,0.55,0.9,0.84,0.78,0.81,0.21,0.64,0.08,0.86,0.63,0.03,0.42,0.85,0.54,0.13,0.96,0.35,0.07,0.28,0.9,0.08,0.1,0.43,0.96,0.37,0.88,0.58,0.76,0.04,0.58,0.9,0.81,0.5,0.76,0.17,0.69,0.92,0.57,0.92,0.07,0.36,0.16,0.52,0.84,0.74,0.48,0.6,0.99,0.34,0.82,0.47,0.25,0.14,0.37,0.11,0.2,0.91,0.56,0.47,0.12,0.65,0.68,0.86,0.14,0.59,0.36,0.13,0.94,0.89,0.91,0.11,0.22,0.04,0.82,0.98,0.41,0.31,0.72,0.91,0.41,0.24,0.91,0.44,0.68,0.41,0.45,0.18,0.17,0.44,0.22,0.28,0.4,0.65,0.63,0.27,0.11,0.49,0.51,0.97,0.3,0.46,0.42,0.81,0.32,0.25,0.97,0.22,0.98,0.09,0.79,0.5,1,0.42,0.34,0.51,0.63,0.85,0.73,0.41,0.84,0.21,0.81,0.45,0.63,0.2,0.77,0.84,0.52,0.64,0.34,0.09,0.17,0.92,0.6,0.77,0.09,0.73,0.53,0.92,0.4,0.12,0.24,0.53,0.18,0.69,0.88,0.84,0.05,0.88,0.09,0.81,0.42,0.99,0.05,0.74,0.56,0.23,0.81,0.9,0.12,0.82,0.97,0.13,0.87,0.59,0.73,0.87,0.41,0.41,0.22,0.38,0.45,0.8,0.28,0.59,0.65,0.69,0.59,0.69,0.93,0.32,0.84,0.75,0.62,0.46,0.74,0.09,0.01,0.28,0.53,0.85,0.79,0.92,0.09,0.36,0.18,0.66,0.93,0.23,0.66,0.77,0.04,0.14,0.42,0.41,0.63,0.04,0.47,0.89,0.15,0.57,0.49,0.29,0.08,0.13,0.27,0.25,0.54,0.65,0.76,0.43,0.47,0.51,0.45,0.27,0.82,0.3,0.86,0.7,0.9,0.8,0.04,0.79,0.82,0.64,0.91,0.29,0.88,0.79,0.34,0.11,0.3,0.62,0.28,0.74,0.56,0.58,0.93,0.28,0.6,0.57,0.83,0.17,0.52,0.37,0.03,0.02,0.2,0.71,0.52,0.27,0.49,0.14,0.71,0.37,0.35,0.92,0.36,0.76,0.8,0.9,0.14,0.83,0.17,0.79,0.29,0.03,0.48,0.22,0.87,0.47,0.84,0.77,0.54,0.01,0.48,0.98,0.23,0.53,0.38,0.74,0.54,0.14,0.29,0.45,0.91,0.25,0.43,0.66,0.42,0.39,0.02,0.37,0.69,0.19,0.71,0.68,0.94,0.12,0.67,0.81,0.6,0.42,0.03,0.8,0.62,0.44,0.93,0.7,0.06,0.74,0.36,0.4,0.2,0.55,0.89,0.22,0.34,0.36,0.7,0.25,0.85,0.49,0.91,0.05,0.46,0.65,0.96,0.59,0.56,0.99,0.69,0.84,0.24,0.83,0.59,0.62,0.36,0.06,0.19,0.43,0.85,0.89,0.26,0.31,0.75,0.27,0.63,0.38,0.4,0.42,0.62,0.73,0.89,0.61,0.58,0.27,0.57,0.96,0.75,0.76,0.71,0.59,0.65,0.31,0.41,0.47,0.42,0.09,0.91,0.65,0.07,0.93,0.16,0.03,0.24,0.08,0.58,0.19,0.89,0.63,0.89,0.75,0.91,0.5,0.46,0.89,0.94,0.27,0.89,0.51,0.78,0.08,0.25,0.54,0.48,0.68,0.18,0.19,0.85,0.89,0.6,0.69,0.19,0.96,0.12,0.1,0.55,0.43,0.41,0.77,0.73,0.3,0.1,0.53,0.41,0.21,0.89,0.36,0.59,0.44,0.22,0.23,0.91,0.2,0.4,0.53,0.72,0.28,0.13,0.15,0.36,0.66,0.03,0.45,0.51,0.9,0.25,0.29,0.9,0.6,0.04,0.67,0.76,0.43,0.33,0.08,0.14,0.02,0.28,0.91,0.95,0.22,0.76,0.1,0.61,0.19,0.76,0.93,0.56,0.32,0.91,0.33,0.21,0.94,0.86,0.22,0.67,0.82,0.05,0.17,0.32,0.84,0.16,0.21,0.31,0.76,0.16,0.69,0.11,0.94,0.43,0.2,0.17,0.55,0.4,0.38,0.5,0.58,0.25,0.3,0.2,0.89,0.98,0.24,0.68,0.26,0.9,0.22,0.87,0.51,0.68,0.56,0.62,0.13,0.05,0.74,0.74,0.08,0.96,0.59,0.38,0.45,0.85,0.56,0,0.5,0.84,0.03,0.6,0.66,0.54,0.8,0.75,0.61,0.06,0.91,0.46,0.16,0.98,0.03,0.72,0.92,0.55,0.63,0.93,0.52,0.92,0.76,0.28,0.1,0.56,0.04,0.82,0.25,0.84,0.7,0.2,0.75,0.19,0.22,0.09,0.84,0.31,0.98,0.93,0.2,0.6,0.41,0.29,0.12,0.08,0.04,0.44,0.05,0.96,0.21,0.92,0.04,0.94,0.73,0.48,0.97,0.41,0.62,0.07,0.41,0.83,0.38,0.9,0.86,0.35,0.27,0.61,0.36,0.49,0.07,0.65,0.93,0.99,0.58,0.17,0.31,0.01,0.52,0.03,0.37,0.26,0.98,0.98,0.01,0.43,0.7,0.06,0.25,0.44,0.39,0.85,1,0.57,0.12,0.45,0.28,0.27,0.15,0.89,0.5,0.76,0.42,0.19,0.24,0.13,0.64,0.36,0.99,0.74,0.27,0.98,0.51,0.03,0.11,0.56,0.92,0.98,0.25,0.07,0.56,0.92,0.72,0.84,0.46,0.62,0.59,0.89,0.76,0.53,0.67,0.13,0.03,0.02,0.78,0.33,0.71,0.39,0.72,0.08,0.9,0.54,0.39,0.3,0.24,0.88,0.52,0.86,0.11,0.51,0.98,0.67,0.63,0.94,0.33,0.1,0.49,0.96,0.4,0.6,0.98,0.18,0.02,0.62,0.4,0.06,0.32,0.3,0.72,0.75,0.14,0.13,0.11,0.07,0.74,0.53,0.2,0.97,0.41,0.79,0.42,0.45,0.07,0.47,0.66,0.69,0.34,0.6,0.6,0.17,0.6,0.41,0.71,0.44,0.51,0.81,0.22,0.19,0.04,0.86,0.87,0.78,0.42,0.76,0.89,0.44,0.88,0.01,0.48,0.83,0.31,0.59,0.43,0.86,0.3,0.57,0.75,0.49,0.3,0.57,0.96,0.37,0.31,0.5,0.17,0.58,0.46,0.69,0.62,0.81,0.84,0.98,0.35,0.13,0.57,0.81,0.75,0.23,0.75,0.7,0.82,0.59,0.45,0.8,0.73,0.59,0.24,0.76,0.58,0.46,0.39,0.03,0.67,0.65,0.4,0.95,0.46,0.25,0.19,0.49,0.82,0.48,0.95,0.91,0.21,0.83,0.58,0.36,0.32,0.55,0.59,0.8,0.75,0.1,0.51,0.91,0.8,1,0.23,0.28,0.78,0.82,0.59,0.33,0.31,0.59,0.17,0.32,0.56,0.16,0.89,0.49,0.45,0.71,0.47,0.81,0.88,0.37,0.48,0.74,0.79,0.07,0.5,0.4,0.14,0.26,0.17,0.52,0.32,0.47,0.89,0.49,0.32,0.12,0.77,0.68,0.33,0.62,0.37,0.43,0.17,0.3,0.38,0.24,0.26,0.29,0.11,0.55,0.02,0.87,0.64,0.23,0.58,0.15,0.11,0.06,0.16,0.99,0.15,0.48,0.59,0.27,0.52,0.86,0.93,0.2,0.39,0.91,0.57,0.36,0.22,0.1,0.8,0.02,0.14,0.32,0.71,0.86,0.55,0.29,0.96,0.05,0.26,0.53,0.02,0.95,0.22,0.22,0.7,0.29,0.77,0.53,0.12,0.3,0.82,0.21,0.35,0.54,0.18,0.5,0.51,0.13,0.75,0.51,0.16,0.92,0.97,0.1,0.96,0.19,0.86,0.37,0.05,0.17,0.4,0.22,0.43,0.76,0.51,0.22,0.72,0.72,0.64,0.38,0.5,1,0.71,0.05,0.34,0.33,0.42,0.31,0.65,0.44,0.86,0.57,0.04,0.82,0.21,0.07,0.12,0.91,0.31,0.37,0.32,0.39,0.65,0.88,0.56,0.75,0.96,0.03,0.86,0.57,0.45,0.52,0.09,0.56,0.72,0.99,0.46,0.78,0.49,0.66,0.52,0.69,0.71,0.36,0.07,0.55,0.27,0.83,0.09,0.15,0.68,0.87,0.46,0.8,0.61,0.53,0.58,0.49,0.87,0.78,0.69,0.99,0.78,0.32,0.2,0.34,0.33,0.11,0.17,0.6,0.61,0.57,0.72,0.23,0.64,0.05,0.44,0.76,0.45,0.04,0.61,0.66,0.23,0.04,0.8,0.04,0.93,0.12,0.73,0.53,0.43,0.86,1,0.86,0.94,0.54,0.01,0.5,0.91,0.86,0.06,0.69,0.16,0.14,0.4,0.34,0.9,0.66,0.68,0.34,0.23,0.73,0.8,0.99,0.02,0.67,0.33,0.54,0.73,0.14,0.84,0.01,0.65,0.97,0.34,0.4,0.01,0.95,0.87,0.66,0.42,0.08,0.38,0.11,0.42,0.59,0.18,0.07,0.61,0.02,0.96,0.47,0.1,0.02,0.95,0.02,0.74,0.02,0.01,0.14,0.24,0.34,0.22,0.82,0.11,0.79,0.38,0.69,0.64,0.88,0.77,0.5,0.62,0.57,0.31,0.36,0.06,0.84,0.29,0.75,0.57,0.29,0.66,0.65,0.76,0.21,0.28,0.88,0.19,0.81,0.08,0.46,0.66,0.39,0.45,0.34,0.78,0.56,0.15,0.37,0.46,0.29,0.17,0.07,0.08,0.26,0.82,0.22,0.13,0.28,0.29,0.07,0.35,0.78,0.83,0.13,0.55,0.95,0.07,0.17,0.61,0.58,0.3,0.65,0.09,0.33,0.25,0.12,0.12,0.92,0.12,0.16,0.5,0.72,0.71,0.42,0.63,0.9,0.64,0.04,0.31,0.74,0.4,0.76,0.1,0.83,0.09,0.6,0.99,0.08,0.36,0.19,0.02,0.02,0.62,0.72,0.24,0.05,0.56,0.18,0.61,0.84,0.5,0.94,0.5,0.37,0.4,0.26,0.76,0.12,0.53,0.88,0.13,0.05,0.03,0.34,0.57,0.24,0.31,0.83,0.31,0.86,0.03,0.31,0.7,0.18,0.37,0.74,0.32,0.17,0.42,0.63,0.89,0.05,0.04,0.51,0.4,0.24,0.53,0.93,0.39,0.27,0.75,0.59,0.08,0.79,0.43,0.78,0.69,0.58,0.38,0.22,0.98,0.83,0.97,0.71,0.01,0.09,0.99,0.47,0.54,0.05,0.47,0.77,0.43,0.7,0.2,0.82,0.75,0.95,0.45,0.62,0.46,0.61,0.44,0.95,0.95,0.56,0.34,0.78,0.17,0.64,0.48,0.87,0.44,0.22,0.97,0.7,0.71,0.36,0.67,0.69,0.62,0.49,0.65,0.12,0.46,0.72,0.21,0.96,0.11,0.52,0.15,0.53,0.93,0.45,0.79,0.36,0.07,0.44,0.21,0,0.98,0.23,0.37,0.27,0.63,0.57,0.03,0.08,0.12,0.27,0.22,0.6,0.67,0.77,0.28,0.89,0.48,0.42,0.42,0.3,0.83,0.63,0.04,0.14,0.72,0.63,0.42,0.74,0.69,0.43,0.55,0.65,0.95,0.52,0.46,0.2,0.39,0.78,0.08,0.65,0.19,0.07,0.76,0.21,0.76,0.43,0.69,0.18,0.97,0.99,0.88,0.54,0.54,0.85,0.19,0.49,0.78,0.05,0.39,0.8,0.28,0.88,0.24,0.49,0.55,0.37,0.78,0.35,0.11,0.71,0.15,0.59,0.04,0.39,0.87,0.33,0.88,0.63,0.42,0.75,0.95,0.88,0.25,0.72,0.51,0.92,0.84,0.97,0.5,0.04,0.46,0.79,0.67,0.18,0.91,0.63,0.88,0.13,0.59,0.66,0.97,0.83,0.51,0.35,0.39,0.51,0.14,0.4,0.6,0.15,0.25,0.48,0.05,0.83,0.55,0.72,0.58,0.82,0.63,0.21,0.39,0.29,0.46,0.61,0.9,0.19,0.63,0.94,0.14,0.32,0.64,0.38,0.47,0.53,0.71,0.35,0.82,0.03,0.27,0.25,0.06,0.47,0.95,0.6,0.49,0.32,0.08,0.6,0.58,0.41,0.07,0.68,0.54,0.37,0.33,0.41,0.54,0.41,0.38,0.69,0.38,0.57,0.61,0.71,0.15,0.19,0.42,0.91,0.29,0.07,0.28,0.62,0.79,0.95,0.66,0.78,0.12,0.41,0.55,0.05,0.2,0.37,0.8,0.37,0.94,0.61,0.44,0.38,0.3,0.56,0.06,0.89,0.1,0.79,0.37,0.67,0.13,0.25,0.51,0.69,0.86,0.78,0.66,0.83,0.39,0.3,0.01,0.57,0.46,0.39,0.33,0.2,0.74,0.37,0.13,0.3,0.11,0.74,0.79,0.17,0.93,0.57,0.08,0.83,0.93,0.69,0.05,0.17,0.97,0.22,0.36,0.88,0.66,0.42,0.91,0.03,0.65,0.31,0.01], top_k=2, namespace='wondervector5000',include_values=True, include_metadata=True)
    print(result['matches'])
    return result['matches'][0]['metadata']['text']+"\n"+result['matches'][1]['metadata']['text']

def query_refiner(conversation, query):
    response = client.chat.completions.create(
    model="gpt-4o",
    messages=[
    {"role": "system", "content": f"Given the following user query and conversation log, formulate a question that would be the most relevant to provide the user with an answer from a knowledge base.\n\nCONVERSATION LOG: \n{conversation}"},
    {"role": "user", "content": f"Query: {query}\n\nRefined Query:"},
    ],
    temperature=0.7,
    max_tokens=256,
    top_p=1,
    frequency_penalty=0,
    presence_penalty=0
    )
    print(response)
    return response.choices[0].message.content

def get_conversation_string():
    conversation_string = ""
    for i in range(len(st.session_state['responses'])-1):
        
        conversation_string += "Human: "+st.session_state['requests'][i] + "\n"
        conversation_string += "Bot: "+ st.session_state['responses'][i+1] + "\n"
    return conversation_string